{"version":3,"sources":["FormContext.ts","components/TimeSetter.tsx","utils.ts","components/steps/TimeStep.tsx","components/DateSetter.tsx","components/steps/DateStep.tsx","components/AvailableDeskList.tsx","components/steps/DeskStep.tsx","components/BookingStepper.tsx","images/floor_plan_Ordina_B2.jpg","pages/BookingPage.tsx","components/DeskItem.tsx","components/CheckinDeskList.tsx","pages/CheckinPage.tsx","components/TopBar.tsx","pages/HomePage.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FormContext","React","createContext","TimeSetter","title","type","useContext","startTime","startTimeValue","setStartTimeValue","endTime","endTimeValue","setEndTimeValue","Box","Typography","variant","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","value","onChange","newValue","renderInput","params","TextField","isBetween","min","max","getUnixTime","date","time","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getTime","isFutureTime","dateValue","now","isDeskSelected","selectedDesk","isEndTimeAfterStart","endtimeValue","unixStartTime","TimeStep","Alert","severity","DateSetter","setDateValue","StaticDatePicker","orientation","displayStaticWrapperAs","openTo","DateStep","AvailableDeskList","useState","currentDeskList","setCurrentDeskList","desk","setSelectedDesk","useEffect","setDeskList","a","fetch","process","bookingList","json","jsonBookingList","bookings","bookingsAtTime","filter","booking","unixEndTime","isBetweenStart","start_time","isBetweenEnd","end_time","data","availableDesks","deskList","find","booked_desk","desk_id","FormControl","sx","m","minWidth","InputLabel","Select","label","event","target","map","MenuItem","DeskStep","BookingStepper","steps","activeStep","setActiveStep","hasStepError","index","Stepper","nonLinear","Step","StepButton","onClick","color","pt","Button","disabled","isLastStep","length","BookingPage","open","setOpen","handleBooking","method","headers","body","JSON","stringify","booking_id","initialStartTime","setHours","initialEndTime","store","Provider","Grid","container","alignItems","item","sm","lg","textAlign","src","img","alt","width","height","direction","justifyContent","paddingTop","md","Fab","style","bottom","right","position","Snackbar","anchorOrigin","vertical","horizontal","action","IconButton","autoHideDuration","onClose","message","DeskItemCheckIn","ListItem","isBookedNow","CheckinDeskList","deskId","desks","desksJson","allDesks","deskIndex","findIndex","getDeskForBooking","currentBookedDesks","bookedDesk","nearbyDesks","otherDesk","otherdDeskIndex","isCurrentlyBooked","distance","Stack","List","maxHeight","overflow","CheckinPage","document","location","search","substr","currentDeskState","setCurrentDeskState","setInitialDeskState","deskState","handleToggleChecked","className","spacing","TopBar","AppBar","Toolbar","component","flexGrow","size","BOOKING_ROUTE_URL","BOOKING_LABEL","CHECKIN_ROUTE_URL","CHECKIN_LABEL","HomePage","isLoading","setIsLoading","hasError","setHasError","deskNr","setDeskNr","getDesks","Array","isArray","Error","console","error","display","Drawer","anchor","flexShrink","boxSizing","Divider","ListItemButton","href","ListItemText","primary","p","LinearProgress","Card","CardHeader","subheader","CardContent","gutterBottom","id","InputProps","startAdornment","InputAdornment","newDeskNr","parseInt","isNaN","CardActions","theme","createTheme","palette","main","orange","secondary","deepOrange","App","ThemeProvider","CssBaseline","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3a8c7fe.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const FormContext = React.createContext<any>(null);","import { FC, useContext } from \"react\";\nimport { Typography, Box, TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, TimePicker } from \"@mui/lab\";\nimport { FormContext } from \"../FormContext\";\n\ntype Props = {\n  title: string;\n  type: \"Start\" | \"End\";\n};\n\nexport const TimeSetter: FC<Props> = ({ title, type }) => {\n  const {\n    startTime: [startTimeValue, setStartTimeValue],\n  } = useContext(FormContext);\n  const {\n    endTime: [endTimeValue, setEndTimeValue],\n  } = useContext(FormContext);\n  return (\n    <Box>\n        <Typography variant=\"subtitle1\">{title}</Typography>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <TimePicker\n            value={type === \"Start\" ? startTimeValue : endTimeValue}\n            onChange={(newValue) => {\n              if (!newValue) {\n                return;\n              }\n              if (type === \"Start\") {\n                setStartTimeValue(newValue);\n              }\n              if (type === \"End\") {\n                setEndTimeValue(newValue);\n              }\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n    </Box>\n  );\n};\n","export function isBetween(value: number, min: number, max: number) {\n  return value >= min && value <= max;\n}\n\nexport function getUnixTime(date: Date, time: Date) {\n  return (\n    new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      time.getHours(),\n      time.getMinutes()\n    ).getTime() / 1000\n  );\n}\nconst UNIX_HOUR = 3600 * 1000;\n\nexport const isFutureTime = (dateValue:Date, startTimeValue:Date) =>{\n  const unixStartTime = getUnixTime(dateValue, startTimeValue);\n  return unixStartTime - (Date.now() + UNIX_HOUR) / 1000 <= 0;\n}\nexport const isDeskSelected =(selectedDesk:string) =>{\n  return selectedDesk === \"\"\n}\nexport const isEndTimeAfterStart = (dateValue:Date, startTimeValue:Date, endtimeValue:Date) =>{\n  const unixStartTime = getUnixTime(dateValue, startTimeValue);\n  const unixEndTime = getUnixTime(dateValue, endtimeValue);\n  return unixEndTime - unixStartTime <= 0;\n}\n","import { FC, useContext } from \"react\"\nimport { Box, Alert } from \"@mui/material\"\nimport { TimeSetter } from \"../TimeSetter\"\nimport { isFutureTime, isEndTimeAfterStart } from \"../../utils\"\nimport { FormContext } from \"../../FormContext\"\n\nexport const TimeStep: FC = () =>{\n    const {\n        date: [dateValue],\n        startTime: [startTimeValue],\n        endTime: [endTimeValue]\n      } = useContext(FormContext);\n\n    return <Box>\n    <TimeSetter title={\"Please select the start time for when you want to book a desk\"} type={\"Start\"} />\n    {isFutureTime(dateValue, startTimeValue) ? (\n      <Alert severity=\"warning\">\n        Check if the time has passed\n      </Alert>\n    ) : null}\n    <TimeSetter title={\"Please select the end time for when you want to book a desk\"} type={\"End\"} />\n    {isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue) ? (\n      <Alert severity=\"warning\">\n        The end time is earlier than the start time\n      </Alert>\n    ) : null}\n  </Box>\n}","import { useContext, FC } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, StaticDatePicker } from \"@mui/lab\";\nimport { FormContext } from \"../FormContext\";\n\nexport const DateSetter: FC = () => {\n  const {\n    date: [dateValue, setDateValue],\n  } = useContext(FormContext);\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <StaticDatePicker<Date>\n        orientation=\"portrait\"\n        displayStaticWrapperAs=\"desktop\"\n        openTo=\"day\"\n        value={dateValue}\n        onChange={(newValue) => {\n          if (newValue) {\n            setDateValue(newValue);\n          }\n        }}\n        renderInput={(params) => <TextField {...params} />}\n      />\n    </LocalizationProvider>\n  );\n};\n","import { FC, useContext} from 'react'\nimport { Box, Typography, Alert } from '@mui/material'\nimport { DateSetter } from '../DateSetter'\nimport { isFutureTime } from '../../utils'\nimport { FormContext } from '../../FormContext'\n\nexport const DateStep: FC = () => {\n    const {\n        date: [dateValue],\n        startTime: [startTimeValue]\n      } = useContext(FormContext);\n\n    return <Box>\n    <Typography variant=\"subtitle1\">Please select the date for when you want to book a desk</Typography>\n    <DateSetter />\n    {isFutureTime(dateValue, startTimeValue) ? (\n      <Alert severity=\"warning\">\n        Check if the date has passed\n      </Alert>\n    ) : null}\n  </Box>\n}","import { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\nimport { useState, FC, useEffect, useContext } from \"react\";\nimport { DeskType, Booking } from \"../types\";\nimport { isBetween, getUnixTime } from \"../utils\";\nimport { FormContext } from \"../FormContext\";\n\nexport const AvailableDeskList: FC = () => {\n  const [currentDeskList, setCurrentDeskList] = useState<DeskType[]>([]);\n  const{\n    desk: [selectedDesk, setSelectedDesk],\n  } = useContext(FormContext);\n  const {\n    startTime: [startTimeValue],\n  } = useContext(FormContext);\n  const {\n    endTime: [endTimeValue],\n  } = useContext(FormContext);\n  const {\n    date: [dateValue],\n  } = useContext(FormContext);\n\n  const handleChange = (event: SelectChangeEvent)=>{\n    setSelectedDesk(event.target.value)\n  }\n\n  useEffect(() => {\n    const setDeskList = async () => {\n      const bookingList = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/bookinglist`\n      );\n      const jsonBookingList = await bookingList.json();\n      const bookings: Booking[] = jsonBookingList.bookingList;\n\n      const bookingsAtTime = bookings.filter((booking: Booking) => {\n        const unixStartTime = getUnixTime(dateValue, startTimeValue);\n        const unixEndTime = getUnixTime(dateValue, endTimeValue);\n          const isBetweenStart  = isBetween(booking.start_time, unixStartTime, unixEndTime);\n          const isBetweenEnd = isBetween(booking.end_time, unixStartTime, unixEndTime);\n          return isBetweenStart || isBetweenEnd;\n        });\n\n      const data = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n      );\n      const json = await data.json();\n\n      const availableDesks = json.deskList.filter((desk: DeskType) => {\n        const isBooked = bookingsAtTime.find((booking: Booking) => booking.booked_desk === desk.desk_id);\n        return !isBooked;\n      });\n      setCurrentDeskList(availableDesks);\n    };\n    setDeskList();\n  }, [endTimeValue, startTimeValue, dateValue, ]);\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n    <InputLabel>Desk</InputLabel>\n    <Select\n      value={selectedDesk}\n      label=\"Desk\"\n      onChange={handleChange}\n    >\n      {currentDeskList.map((desk) => (\n        <MenuItem value={desk.desk_id}>{desk.desk_id}</MenuItem>\n      ))}\n     </Select>\n      </FormControl>\n  );\n};\n","import { FC, useContext } from \"react\"\nimport { Box, Typography, Alert } from \"@mui/material\"\nimport { AvailableDeskList } from \"../AvailableDeskList\"\nimport { isDeskSelected } from \"../../utils\"\nimport { FormContext } from \"../../FormContext\"\n\nexport const DeskStep: FC = ()=>{\n    const {\n        desk: [selectedDesk],\n      } = useContext(FormContext);\n\n    return <Box>\n    <Typography variant=\"subtitle1\">Please select one of the available desks:</Typography>\n    <AvailableDeskList />\n    {isDeskSelected(selectedDesk)? (\n      <Alert severity=\"warning\">\n        There is no desk selected\n      </Alert>\n    ) : (\n      \"\"\n    )}\n  </Box>\n}","import { Stepper, Step, StepButton, Typography, Box, Button } from \"@mui/material\";\nimport { FC, useContext } from \"react\";\nimport { FormContext } from \"../FormContext\";\nimport { isFutureTime, isDeskSelected, isEndTimeAfterStart } from \"../utils\";\n\nexport const BookingStepper: FC = () => {\n  const steps: string[] = [\n    \"Select booking date\",\n    \"Select booking time\",\n    \"Select desk\",\n  ];\n  const {\n    activeStep: [activeStep, setActiveStep],\n      date: [dateValue],\n      startTime: [startTimeValue],\n      endTime: [endTimeValue],\n      desk: [selectedDesk],\n  } = useContext(FormContext);\n\n  const handleStep = (step: number) => {\n    setActiveStep(step);\n  };\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  const handleNext = () => {\n    const isLastStep = activeStep === steps.length - 1;\n    const newActiveStep =\n      isLastStep\n        ? 0\n        : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const hasStepError = (index:number) =>{\n    return (index === 0 && isFutureTime(dateValue, startTimeValue))\n    || (index === 1 && isEndTimeAfterStart(dateValue,startTimeValue,endTimeValue))\n    || (index === 2 && isDeskSelected(selectedDesk));\n  }\n\n  return (\n    <Box>\n      <Stepper nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepButton onClick={() => handleStep(index)}>\n            <Typography variant=\"h5\">{label}</Typography>\n              {hasStepError(index)?\n              <Typography variant=\"caption\" color=\"error\">Something here isnt filled in correctly</Typography>: null\n              }\n            </StepButton>\n          </Step>\n        ))}\n      </Stepper>\n      <Box sx={{pt: 2 }}>\n      <Button disabled={activeStep === 0} onClick={handleBack}>\n        Back\n      </Button>\n      <Button onClick={handleNext}>\n        Next\n      </Button>\n      </Box>\n    </Box>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/floor_plan_Ordina_B2.c52b3cd2.jpg\";","import { FC, useState } from \"react\";\nimport { Grid, Snackbar, IconButton, Fab, Typography } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { TimeStep } from \"../components/steps/TimeStep\";\nimport { DateStep } from \"../components/steps/DateStep\";\nimport { DeskStep } from \"../components/steps/DeskStep\";\nimport { BookingStepper } from \"../components/BookingStepper\";\nimport img from \"../images/floor_plan_Ordina_B2.jpg\";\nimport { getUnixTime, isFutureTime, isDeskSelected, isEndTimeAfterStart} from \"../utils\";\nimport { FormContext } from \"../FormContext\";\n\n\nconst UNIX_DAY = 86400 * 1000;\nconst steps = [<DateStep/>, <TimeStep/>, <DeskStep/>]\n\nconst BookingPage: FC = () => {\n  const [open, setOpen] = useState(false);\n  \n\n  const handleBooking = async () => {\n    const data = await fetch(`${process.env.REACT_APP_ROOT_URL}api/book`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        booking_id: `booking ${selectedDesk}.${Date.now()}`,\n        start_time: getUnixTime(dateValue, startTimeValue),\n        end_time: getUnixTime(dateValue, endTimeValue),\n        booked_desk: selectedDesk,\n      }),\n    });\n    const json = await data.json();\n    if (json.booking) {\n      setOpen(true);\n    }\n  };\n  const checkFields = () => {\n    return isDeskSelected(selectedDesk) || isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue) || isFutureTime(dateValue, startTimeValue);\n  };\n\n  const initialStartTime = new Date();\n  initialStartTime.setHours(9, 0, 0, 0);\n  const initialEndTime = new Date();\n  initialEndTime.setHours(17, 0, 0, 0);\n  const [activeStep, setActiveStep] = useState(0);\n  const [startTimeValue, setStartTimeValue] = useState<Date>(initialStartTime);\n  const [endTimeValue, setEndTimeValue] = useState<Date>(initialEndTime);\n  const [dateValue, setDateValue] = useState<Date>(\n    new Date(Date.now() + UNIX_DAY)\n  );\n  const [selectedDesk, setSelectedDesk] = useState(\"\");\n  const store = {\n    startTime: [startTimeValue, setStartTimeValue],\n    endTime: [endTimeValue, setEndTimeValue],\n    date: [dateValue, setDateValue],\n    desk: [selectedDesk, setSelectedDesk],\n    activeStep: [activeStep, setActiveStep],\n  };\n\n  return (\n    <FormContext.Provider value={store}>\n      <div>\n        <Grid container alignItems={\"center\"}>\n          <Grid item sm={12} lg={7} alignItems={\"center\"} textAlign={\"center\"}>\n            <Typography variant=\"h4\">Floor plan</Typography>\n            <img src={img} alt=\"layout img\" width={\"100%\"} height={\"auto\"} />\n          </Grid>\n          <Grid item sm={12} lg={5} height={1100}>\n            <Grid container direction={\"column\"} justifyContent={\"center\"} paddingTop={5}>\n              <Grid item md={4}>\n              <BookingStepper />\n              </Grid>\n              <Grid item md={6} justifyContent={\"center\"}>\n              {steps[activeStep]}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Fab\n              color=\"secondary\"\n              disabled={checkFields()}\n              onClick={handleBooking}\n              style={{\n                bottom: 20,\n                right: 20,\n                position: 'fixed',}}\n            >\n              Book\n            </Fab>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          open={open}\n          action={\n            <IconButton onClick={() => setOpen(false)}>\n              <CloseIcon color={\"primary\"} />\n            </IconButton>\n          }\n          autoHideDuration={6000}\n          onClose={() => {\n            setOpen(false);\n          }}\n          message={`Your booking for desk ${selectedDesk} was succesful`}\n        />\n      </div>\n    </FormContext.Provider>\n  );\n};\nexport default BookingPage;\n","import { ListItem } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { DeskType } from \"../types\";\n\ntype Props = {\n  desk: DeskType;\n};\nexport const DeskItemCheckIn: FC<Props> = ({ desk }) => {\n  return <ListItem>{desk.desk_id}</ListItem>;\n};\n","import { List, Stack } from \"@mui/material\";\nimport { useState, FC, useEffect } from \"react\";\nimport { DeskType, Booking } from \"../types\";\nimport { DeskItemCheckIn } from \"./DeskItem\";\nimport { isBetween } from \"../utils\";\n\ntype Props = {\n  deskId: string;\n};\nconst OFFSET_AVAILABLE_DESKS = 2\nconst UNIX_HALF_HOUR = 1800000;\n\nconst isBookedNow = (booking: Booking) => {\n  return (\n    isBetween(Date.now() / 1000, booking.start_time-UNIX_HALF_HOUR, booking.end_time)\n  );\n};\n\nexport const CheckinDeskList: FC<Props> = ({ deskId }) => {\n  const [currentDeskList, setCurrentDeskList] = useState<DeskType[]>([]);\n\n  useEffect(() => {\n    const setDeskList = async () => {\n      const desks = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n      );\n      const desksJson = await desks.json();\n      const allDesks: DeskType[] = desksJson.deskList;\n\n      const bookingList = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/bookinglist`\n      );\n      const jsonBookingList = await bookingList.json();\n      const bookings: Booking[] = jsonBookingList.bookingList;\n\n      const deskIndex = allDesks.findIndex((desk) => desk.desk_id === deskId);\n      const getDeskForBooking = (booking:Booking) => allDesks.find((desk) => desk.desk_id === booking.booked_desk); \n      const currentBookedDesks = bookings.filter(isBookedNow).map(getDeskForBooking);\n\n      if(currentBookedDesks.find((bookedDesk) => bookedDesk?.desk_id === deskId)){\n        const nearbyDesks = allDesks.filter((otherDesk, otherdDeskIndex) => {\n          const isCurrentlyBooked = currentBookedDesks.find((bookedDesk) => bookedDesk?.desk_id === otherDesk.desk_id)\n          const isSameDesk = deskIndex === otherdDeskIndex;\n          const distance = deskIndex - otherdDeskIndex;\n          const isInRange = distance >= -OFFSET_AVAILABLE_DESKS && distance <= OFFSET_AVAILABLE_DESKS;\n          return !isSameDesk && isInRange && !isCurrentlyBooked;\n        });\n        setCurrentDeskList(nearbyDesks);\n      }\n    };\n    setDeskList();\n  }, [deskId]);\n\n  return (\n    <Stack>\n       {currentDeskList.length <= 0? \"\" : \"This desk is not available, but these are:\"}\n      <List style={{ maxHeight: 200, overflow: \"auto\" }}>\n        {currentDeskList.map((desk) => (\n          <DeskItemCheckIn key={desk.desk_id} desk={desk}></DeskItemCheckIn>\n        ))}\n      </List>\n    </Stack>\n  );\n};\n","import { Stack, Button, Snackbar, Typography, IconButton } from \"@mui/material\";\nimport { useState, FC, useEffect } from \"react\";\nimport { CheckinDeskList } from \"../components/CheckinDeskList\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst CheckinPage: FC = () => {\n  const deskId = document.location.search.substr(1);\n  const [currentDeskState, setCurrentDeskState] = useState(\"free\");\n  const [open, setOpen] = useState(false);\n\n\n  useEffect(() => {\n    const setInitialDeskState = async () => {\n      const data = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`\n      );\n      const json = await data.json();\n      setCurrentDeskState(json.deskState);\n    };\n    setInitialDeskState();\n  }, [deskId]);\n\n  const handleToggleChecked = async () => {\n    const data = await fetch(\n      `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n        body: JSON.stringify({\n          deskState: currentDeskState,\n          deskId: deskId,\n        }),\n      }\n    );\n    const json = await data.json();\n    setCurrentDeskState(json.deskState);\n    setOpen(true);\n  };\n\n  return (\n    <div className=\"CheckinPage\">\n      <Stack spacing={2}>\n        <Typography variant={\"h5\"}>{deskId}</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={currentDeskState === \"unavailable\"}\n          onClick={handleToggleChecked}\n        >\n          {currentDeskState === \"free\" ? \"Check in\" : \"Check uit\"}\n        </Button>\n        <CheckinDeskList deskId={deskId} />\n      </Stack>\n      <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={open}\n          autoHideDuration={6000}\n          onClose={() => {\n            setOpen(false);\n          }}\n          action={\n            <IconButton\n            onClick={()=> setOpen(false)}>\n              <CloseIcon color={\"primary\"}/>\n            </IconButton>\n          }\n          message={currentDeskState === \"free\" ? \"uitgechecked\" : \"ingechecked\"}\n        />\n    </div>\n  );\n};\n\nexport default CheckinPage;\n","import { Toolbar, IconButton, AppBar, Typography } from \"@mui/material\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport React, { FC } from \"react\";\n\nexport const TopBar: FC = () => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Typography\n          variant=\"h6\"\n          color=\"inherit\"\n          component=\"div\"\n          sx={{ flexGrow: 1 }}\n        >\n          Username\n        </Typography>\n        <IconButton size=\"large\" color=\"inherit\">\n          <AccountBoxIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { Toolbar, Drawer, Divider, List, ListItem, ListItemText, ListItemButton, Card, CardContent, Typography, CardHeader, Box, CardActions, Button, LinearProgress, Alert, InputAdornment, TextField } from \"@mui/material\";\nimport { FC, useEffect, useState } from \"react\";\n\nconst DRAWER_WIDTH = 240;\nconst BOOKING_ROUTE_URL = \"/desks/book\";\nconst BOOKING_LABEL = \"Make a new booking\";\nconst CHECKIN_ROUTE_URL = \"/desks/checkin/?b2.\";\nconst CHECKIN_LABEL = \"Check in at desk b2.\";\n\nconst HomePage: FC = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasError, setHasError] = useState(false);\n    const [deskNr, setDeskNr] = useState<number>(1);\n\n    const getDesks = async () => {\n        setIsLoading(true);\n        try {\n            const data = await fetch(\n                `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n            );\n            const { deskList } = await data.json() as { deskList: object[] };\n            if (!Array.isArray(deskList)) {\n                throw new Error(\"No desks in response\");\n            }\n        } catch (error) {\n            console.error(error);\n            setHasError(true);\n        }\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        getDesks();\n    }, []);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newDeskNr = parseInt(event.target.value, 10);\n        if(!isNaN(newDeskNr)) {\n            setDeskNr(newDeskNr);\n        } else {\n            console.error(\"Error: not a number, might be an intermediate value\");\n        }\n    }\n\n    return <Box sx={{ display: \"flex\" }}>\n        <Drawer variant=\"permanent\" anchor=\"left\" sx={{\n            width: DRAWER_WIDTH,\n            flexShrink: 0,\n            '& .MuiDrawer-paper': {\n                width: DRAWER_WIDTH,\n                boxSizing: 'border-box',\n            },\n        }}>\n            <Toolbar />\n            <Divider />\n            {!hasError && <List>\n                <ListItem>\n                    <ListItemButton component=\"a\" href={BOOKING_ROUTE_URL}>\n                        <ListItemText primary={BOOKING_LABEL} />\n                    </ListItemButton>\n                </ListItem>\n                <ListItem>\n                    <ListItemButton component=\"a\" href={`${CHECKIN_ROUTE_URL}${deskNr}`}>\n                        <ListItemText primary={`${CHECKIN_LABEL}${deskNr}`} />\n                    </ListItemButton>\n                </ListItem>\n            </List>}\n        </Drawer>\n        <Box component=\"main\"\n            sx={{ flexGrow: 1, p: 3 }}>\n            {isLoading && <LinearProgress />}\n            <Card>\n                <CardHeader title=\"Smart desk booking\" subheader=\"Ordina\" />\n                <CardContent>\n                    {hasError && <Alert severity=\"error\">Error: API not available or failing!</Alert>}\n                    <Typography variant=\"h6\" gutterBottom>Booking a desk</Typography>\n                    <Typography gutterBottom>Here you can book a desk for you and your team. Keep in mind ...</Typography>\n                    <Typography variant=\"h6\" gutterBottom>Checking in</Typography>\n                    <Typography>To check in you can scan the QR code on the desk or type in the desk number below. Keep in mind ...</Typography>\n                    <TextField\n                        label=\"Desk number\"\n                        id=\"outlined-start-adornment\"\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">B2.</InputAdornment>,\n                        }}\n                        value={deskNr}\n                        onChange={handleChange}\n                        type=\"number\"\n                    />\n                </CardContent>\n                {!hasError && <CardActions>\n                    <Button component=\"a\" href={BOOKING_ROUTE_URL}>{BOOKING_LABEL}</Button>\n                    <Button component=\"a\" href={`${CHECKIN_ROUTE_URL}${deskNr}`} color=\"secondary\">{`${CHECKIN_LABEL}${deskNr}`}</Button>\n                </CardActions>}\n            </Card>\n        </Box>\n    </Box>\n}\n\nexport default HomePage;\n","import {createTheme } from '@mui/material/styles';\nimport { orange, deepOrange } from '@mui/material/colors';\n\nexport const theme = createTheme({\n    palette: {\n      primary: {\n        main: orange[500],\n      },\n      secondary: {\n        main: deepOrange[500],\n      },\n    },\n  });","import { ThemeProvider } from '@mui/material/styles';\nimport BookingPage from './pages/BookingPage';\nimport CheckinPage from './pages/CheckinPage';\nimport { TopBar } from './components/TopBar';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport { CssBaseline } from '@mui/material';\nimport { theme } from './theme'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <CssBaseline />\n          <TopBar />\n          <Switch>\n            <Route path=\"/desks/book\" component={BookingPage} />\n            <Route path=\"/desks/checkin\" component={CheckinPage} />\n            <Route component={HomePage} />\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}