{"version":3,"sources":["components/TimeSetter.tsx","components/DateSetter.tsx","components/DeskItem.tsx","components/DeskList.tsx","images/layout.jpg","pages/bookingPage.tsx","pages/checkinPage.tsx","components/TopBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSetter","title","type","useContext","FormContext","startTime","startTimeValue","setStartTimeValue","endTime","endTimeValue","setEndTimeValue","Card","CardContent","Typography","variant","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","value","includes","onChange","newValue","renderInput","params","TextField","DateSetter","date","dateValue","setDateValue","StaticDatePicker","orientation","openTo","DeskItem","desk","selectedDesk","setSelectedDesk","ListItemButton","selected","desk_id","onClick","event","handleListItemClick","DeskList","useState","currentDeskList","setCurrentDeskList","useEffect","setDeskList","a","fetch","data","json","deskList","List","map","React","createContext","getUnixTime","time","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getTime","BookingPage","handleBooking","process","method","headers","body","JSON","stringify","bookingId","now","endtimeValue","deskId","store","Provider","Grid","container","spacing","item","xs","src","img1","alt","width","height","Button","color","CheckinPage","document","location","search","substr","currentDeskState","setCurrentDeskState","setInitialDeskState","deskState","handleToggleChecked","className","disabled","TopBar","AppBar","position","Toolbar","component","sx","flexGrow","IconButton","size","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.baadf5c0.chunk.js","sourcesContent":["import { FC, useContext } from \"react\";\nimport { Typography, Card, CardContent, TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, TimePicker } from \"@mui/lab\";\nimport { FormContext } from \"../pages/bookingPage\";\n\ntype Props = {\n  title: string;\n  type: \"Start\" | \"End\";\n};\n\nexport const TimeSetter: FC<Props> = ({ title, type }) => {\n  const {\n    startTime: [startTimeValue, setStartTimeValue],\n  } = useContext(FormContext);\n  const {\n    endTime: [endTimeValue, setEndTimeValue],\n  } = useContext(FormContext);\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"body2\">{title}</Typography>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <TimePicker\n            value={title.includes(\"Start\") ? startTimeValue : endTimeValue}\n            onChange={(newValue) => {\n              if (!newValue) {\n                return;\n              }\n              if (type === \"Start\") {\n                setStartTimeValue(newValue);\n              }\n              if (type === \"End\") {\n                setEndTimeValue(newValue);\n              }\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useContext, FC } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, StaticDatePicker } from \"@mui/lab\";\nimport { FormContext } from \"../pages/bookingPage\";\n\nexport const DateSetter: FC = () => {\n  const {\n    date: [dateValue, setDateValue],\n  } = useContext(FormContext);\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <StaticDatePicker<Date>\n        orientation=\"portrait\"\n        openTo=\"day\"\n        value={dateValue}\n        onChange={(newValue) => {\n          if (newValue) {\n            setDateValue(newValue);\n          }\n        }}\n        renderInput={(params) => <TextField {...params} />}\n      />\n    </LocalizationProvider>\n  );\n};\n","import { ListItemButton } from \"@mui/material\";\nimport { FC, useContext } from \"react\";\nimport { FormContext } from \"../pages/bookingPage\";\nimport { DeskType } from \"../types\";\n\ntype Props = {\n  desk: DeskType;\n};\n\nexport const DeskItem: FC<Props> = ({ desk }) => {\n  const {\n    desk: [selectedDesk, setSelectedDesk],\n  } = useContext(FormContext);\n  const handleListItemClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    desk: string\n  ) => {\n    setSelectedDesk(desk);\n  };\n  return (\n    <ListItemButton\n      selected={selectedDesk === desk.desk_id}\n      onClick={(event) => handleListItemClick(event, desk.desk_id)}\n      key={desk.desk_id}\n    >\n      {desk.desk_id}\n    </ListItemButton>\n  );\n};\n","import { List } from \"@mui/material\";\nimport { useState, FC, useEffect } from \"react\";\nimport { DeskType } from \"../types\";\nimport { DeskItem } from \"./DeskItem\";\n\nexport const DeskList: FC = () => {\n  const [currentDeskList, setCurrentDeskList] = useState([] as DeskType[]);\n  useEffect(() => {\n    const setDeskList = async () => {\n      const data = await fetch(`http://localhost:3001/api/desk/list`);\n      const json = await data.json();\n      setCurrentDeskList(json.deskList);\n    };\n    setDeskList();\n  }, []);\n\n  return (\n    <List>\n      {currentDeskList.map((desk) => (\n        <DeskItem desk={desk}></DeskItem>\n      ))}\n    </List>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/layout.87a63605.jpg\";","import React, { FC, useState } from \"react\";\nimport { Button, Grid } from \"@mui/material\";\nimport { TimeSetter } from \"../components/TimeSetter\";\nimport { DateSetter } from \"../components/DateSetter\";\nimport { DeskList } from \"../components/DeskList\";\nimport img1 from \"../images/layout.jpg\";\n\nexport const FormContext = React.createContext<any>(null);\n\nfunction getUnixTime(date: Date, time: Date) {\n  return (\n    new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      time.getHours(),\n      time.getMinutes()\n    ).getTime() / 1000\n  );\n}\n\nconst BookingPage: FC = () => {\n  const handleBooking = async () => {\n    await fetch(`${process.env.REACT_APP_ROOT_URL}api/book`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        bookingId: `booking ${selectedDesk}.${Date.now()}`,\n        startTime: getUnixTime(dateValue, startTimeValue),\n        endTime: getUnixTime(dateValue, endtimeValue),\n        deskId: selectedDesk,\n      }),\n    });\n  };\n  const [startTimeValue, setStartTimeValue] = useState<Date>(new Date());\n  const [endtimeValue, setEndTimeValue] = useState<Date>(new Date());\n  const [dateValue, setDateValue] = useState<Date>(new Date());\n  const [selectedDesk, setSelectedDesk] = useState(\"\");\n  const store = {\n    startTime: [startTimeValue, setStartTimeValue],\n    endTime: [endtimeValue, setEndTimeValue],\n    date: [dateValue, setDateValue],\n    desk: [selectedDesk, setSelectedDesk],\n  };\n  return (\n    <FormContext.Provider value={store}>\n      <div>\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <h3>layout picture</h3>\n            <img src={img1} alt=\"layout img\" width={1200} height={500} />\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <DateSetter />\n              </Grid>\n              <Grid item xs={6}>\n                <TimeSetter title={\"Start time\"} type={\"Start\"} />\n                <TimeSetter title={\"End time\"} type={\"End\"} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={4}>\n            <h3>list available desks</h3>\n            <DeskList />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleBooking}\n            >\n              Book\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </FormContext.Provider>\n  );\n};\nexport default BookingPage;\n","import Button from \"@mui/material/Button\";\nimport React, { useState, FC, useEffect } from \"react\";\n\nconst CheckinPage: FC = () => {\n  const deskId = document.location.search.substr(1);\n  const [currentDeskState, setCurrentDeskState] = useState(\"free\");\n\n  useEffect(() => {\n    const setInitialDeskState = async () => {\n      const data = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`\n      );\n      const json = await data.json();\n      setCurrentDeskState(json.deskState);\n    };\n    setInitialDeskState();\n  }, [deskId]);\n\n  const handleToggleChecked = async () => {\n    const data = await fetch(\n      `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n        body: JSON.stringify({\n          deskState: currentDeskState,\n          deskId: deskId,\n        }),\n      }\n    );\n    const json = await data.json();\n    setCurrentDeskState(json.deskState);\n  };\n\n  return (\n    <div className=\"CheckinPage\">\n      <header className=\"checkinHeader\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={currentDeskState === \"unavailable\"}\n          onClick={handleToggleChecked}\n        >\n          check in/ uit\n        </Button>\n\n        {currentDeskState === \"free\" ? \"uitgechecked\" : \"ingechecked\"}\n      </header>\n    </div>\n  );\n};\n\nexport default CheckinPage;\n","import { Toolbar, IconButton, AppBar, Typography } from \"@mui/material\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport React, { FC } from \"react\";\n\nexport const TopBar: FC = () => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Typography\n          variant=\"h6\"\n          color=\"inherit\"\n          component=\"div\"\n          sx={{ flexGrow: 1 }}\n        >\n          Username\n        </Typography>\n        <IconButton size=\"large\" color=\"inherit\">\n          <AccountBoxIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import './App.css';\nimport BookingPage from './pages/bookingPage';\nimport CheckinPage from './pages/checkinPage';\nimport {TopBar} from './components/TopBar';\nimport {Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar/>\n      <Route path=\"/desks/book\" component={BookingPage}/>\n      <Route path=\"/desks/checkin\" component={CheckinPage}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}