{"version":3,"sources":["FormContext.ts","components/TimeSetter.tsx","utils.ts","components/steps/TimeStep.tsx","components/DateSetter.tsx","components/steps/DateStep.tsx","components/AvailableDeskList.tsx","images/floor_plan_Ordina_B2.jpg","components/steps/DeskStep.tsx","components/BookingStepper.tsx","pages/BookingPage.tsx","components/DeskItem.tsx","components/CheckinDeskList.tsx","pages/CheckinPage.tsx","components/TopBar.tsx","pages/HomePage.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FormContext","React","createContext","TimeSetter","title","type","useContext","startTime","startTimeValue","setStartTimeValue","endTime","endTimeValue","setEndTimeValue","Box","Typography","className","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","value","onChange","newValue","renderInput","params","TextField","isBetween","min","max","getUnixTime","date","time","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getTime","isFutureTime","dateValue","now","isDeskSelected","selectedDesk","isEndTimeAfterStart","endtimeValue","unixStartTime","TimeStep","Alert","severity","isPastDate","DateSetter","setDateValue","StaticDatePicker","orientation","displayStaticWrapperAs","openTo","shouldDisableDate","DateStep","AvailableDeskList","useState","currentDeskList","setCurrentDeskList","desk","setSelectedDesk","bookingSucces","useEffect","setDeskList","a","fetch","process","bookingList","json","jsonBookingList","bookings","bookingsAtTime","filter","booking","unixEndTime","isBetweenStart","start_time","isBetweenEnd","end_time","data","availableDesks","deskList","find","booked_desk","desk_id","FormControl","sx","m","minWidth","InputLabel","Select","label","event","target","map","MenuItem","DeskStep","imgOpen","setImgOpen","Grid","container","item","xs","md","Card","onClick","src","img","alt","variant","Modal","open","onClose","BookingStepper","stepComponents","steps","activeStep","setActiveStep","hasStepError","index","width","justifyContent","rowSpacing","Button","disabled","isLastStep","length","Stepper","nonLinear","Step","StepButton","color","BookingPage","handleBooking","method","headers","body","JSON","stringify","booking_id","setBookingSucces","setPrevSelectedDesk","initialStartTime","setHours","initialEndTime","prevSelectedDesk","store","Provider","style","textAlign","padding","Paper","elevation","height","margin","Fab","bottom","right","position","Snackbar","anchorOrigin","vertical","horizontal","action","IconButton","autoHideDuration","message","DeskItemCheckIn","ListItem","isBookedNow","CheckinDeskList","deskId","desks","desksJson","allDesks","deskIndex","findIndex","getDeskForBooking","currentBookedDesks","bookedDesk","nearbyDesks","otherDesk","otherdDeskIndex","isCurrentlyBooked","distance","Stack","List","maxHeight","overflow","CheckinPage","document","location","search","substr","currentDeskState","setCurrentDeskState","setOpen","setInitialDeskState","deskState","handleToggleChecked","spacing","TopBar","AppBar","Toolbar","component","flexGrow","size","BOOKING_ROUTE_URL","BOOKING_LABEL","CHECKIN_ROUTE_URL","CHECKIN_LABEL","HomePage","isLoading","setIsLoading","hasError","setHasError","deskNr","setDeskNr","getDesks","Array","isArray","Error","console","error","display","Drawer","anchor","flexShrink","boxSizing","Divider","ListItemButton","href","ListItemText","primary","p","pt","LinearProgress","CardHeader","subheader","CardContent","gutterBottom","id","InputProps","startAdornment","InputAdornment","newDeskNr","parseInt","isNaN","CardActions","theme","createTheme","palette","main","orange","secondary","deepOrange","App","ThemeProvider","CssBaseline","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d50a5cfd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const FormContext = React.createContext<any>(null);","import { FC, useContext } from \"react\";\nimport { Typography, Box, TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, TimePicker } from \"@mui/lab\";\nimport { FormContext } from \"../FormContext\";\n\ntype Props = {\n  title: string;\n  type: \"Start\" | \"End\";\n};\n\nexport const TimeSetter: FC<Props> = ({ title, type }) => {\n  const {\n    startTime: [startTimeValue, setStartTimeValue],\n  } = useContext(FormContext);\n  const {\n    endTime: [endTimeValue, setEndTimeValue],\n  } = useContext(FormContext);\n  return (\n    <Box>\n      <Typography className=\"subText\">{title}</Typography>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          value={type === \"Start\" ? startTimeValue : endTimeValue}\n          onChange={(newValue) => {\n            if (!newValue) {\n              return;\n            }\n            if (type === \"Start\") {\n              setStartTimeValue(newValue);\n            }\n            if (type === \"End\") {\n              setEndTimeValue(newValue);\n            }\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  );\n};\n","export function isBetween(value: number, min: number, max: number) {\n  return value >= min && value <= max;\n}\n\nexport function getUnixTime(date: Date, time: Date) {\n  return (\n    new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      time.getHours(),\n      time.getMinutes()\n    ).getTime() / 1000\n  );\n}\nconst UNIX_HOUR = 3600 * 1000;\n\nexport const isFutureTime = (dateValue:Date, startTimeValue:Date) =>{\n  const unixStartTime = getUnixTime(dateValue, startTimeValue);\n  return unixStartTime - (Date.now() + UNIX_HOUR) / 1000 <= 0;\n}\nexport const isDeskSelected =(selectedDesk:string) =>{\n  return selectedDesk === \"\"\n}\nexport const isEndTimeAfterStart = (dateValue:Date, startTimeValue:Date, endtimeValue:Date) =>{\n  const unixStartTime = getUnixTime(dateValue, startTimeValue);\n  const unixEndTime = getUnixTime(dateValue, endtimeValue);\n  return unixEndTime - unixStartTime <= 0;\n}\n","import { FC, useContext } from \"react\";\nimport { Box, Alert } from \"@mui/material\";\nimport { TimeSetter } from \"../TimeSetter\";\nimport { isFutureTime, isEndTimeAfterStart } from \"../../utils\";\nimport { FormContext } from \"../../FormContext\";\n\nexport const TimeStep: FC = () => {\n  const {\n    date: [dateValue],\n    startTime: [startTimeValue],\n    endTime: [endTimeValue],\n  } = useContext(FormContext);\n\n  return (\n    <Box>\n      <TimeSetter\n        title={\"Please select the start time for when you want to book a desk\"}\n        type={\"Start\"}\n      />\n      {isFutureTime(dateValue, startTimeValue) ? (\n        <Alert severity=\"warning\">Check if the time has passed</Alert>\n      ) : null}\n      <TimeSetter\n        title={\"Please select the end time for when you want to book a desk\"}\n        type={\"End\"}\n      />\n      {isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue) ? (\n        <Alert severity=\"warning\">\n          The end time is earlier than the start time\n        </Alert>\n      ) : null}\n    </Box>\n  );\n};\n","import { useContext, FC } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, StaticDatePicker } from \"@mui/lab\";\nimport { FormContext } from \"../FormContext\";\nimport { getUnixTime } from \"../utils\";\n\nconst isPastDate = (date: Date) => {\n  return getUnixTime(date, date) < Date.now() / 1000;\n};\n\nexport const DateSetter: FC = () => {\n  const {\n    date: [dateValue, setDateValue],\n  } = useContext(FormContext);\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <StaticDatePicker<Date>\n        orientation=\"portrait\"\n        displayStaticWrapperAs=\"desktop\"\n        openTo=\"day\"\n        value={dateValue}\n        shouldDisableDate={isPastDate}\n        onChange={(newValue) => {\n          if (newValue) {\n            setDateValue(newValue);\n          }\n        }}\n        renderInput={(params) => <TextField {...params} />}\n      />\n    </LocalizationProvider>\n  );\n};\n","import { FC, useContext } from \"react\";\nimport { Box, Typography, Alert } from \"@mui/material\";\nimport { DateSetter } from \"../DateSetter\";\nimport { isFutureTime } from \"../../utils\";\nimport { FormContext } from \"../../FormContext\";\n\nexport const DateStep: FC = () => {\n  const {\n    date: [dateValue],\n    startTime: [startTimeValue],\n  } = useContext(FormContext);\n\n  return (\n    <Box>\n      <Typography className=\"subText\">\n        Please select the date for when you want to book a desk\n      </Typography>\n      <DateSetter />\n      {isFutureTime(dateValue, startTimeValue) ? (\n        <Alert severity=\"warning\">Check if the date has passed</Alert>\n      ) : null}\n    </Box>\n  );\n};\n","import { FormControl,InputLabel,MenuItem,Select,SelectChangeEvent } from \"@mui/material\";\nimport { useState, FC, useEffect, useContext } from \"react\";\nimport { DeskType, Booking } from \"../types\";\nimport { isBetween, getUnixTime } from \"../utils\";\nimport { FormContext } from \"../FormContext\";\n\nexport const AvailableDeskList: FC = () => {\n  const [currentDeskList, setCurrentDeskList] = useState<DeskType[]>([]);\n  const {\n    desk: [selectedDesk, setSelectedDesk],\n  } = useContext(FormContext);\n  const {\n    startTime: [startTimeValue],\n  } = useContext(FormContext);\n  const {\n    endTime: [endTimeValue],\n  } = useContext(FormContext);\n  const {\n    date: [dateValue],\n  } = useContext(FormContext);\n  const{\n    bookingSucces: [bookingSucces]\n  } = useContext(FormContext);\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setSelectedDesk(event.target.value);\n  };\n\n  useEffect(() => {\n    const setDeskList = async () => {\n      const bookingList = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/bookinglist`\n      );\n      const jsonBookingList = await bookingList.json();\n      const bookings: Booking[] = jsonBookingList.bookingList;\n\n      const bookingsAtTime = bookings.filter((booking: Booking) => {\n        const unixStartTime = getUnixTime(dateValue, startTimeValue);\n        const unixEndTime = getUnixTime(dateValue, endTimeValue);\n        const isBetweenStart = isBetween(\n          booking.start_time,\n          unixStartTime,\n          unixEndTime\n        );\n        const isBetweenEnd = isBetween(\n          booking.end_time,\n          unixStartTime,\n          unixEndTime\n        );\n        return isBetweenStart || isBetweenEnd;\n      });\n\n      const data = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n      );\n      const json = await data.json();\n\n      const availableDesks = json.deskList.filter((desk: DeskType) => {\n        const isBooked = bookingsAtTime.find(\n          (booking: Booking) => booking.booked_desk === desk.desk_id\n        );\n        return !isBooked;\n      });\n      setCurrentDeskList(availableDesks);\n    };\n    setDeskList();\n  }, [bookingSucces, endTimeValue, startTimeValue, dateValue]);\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>Desk</InputLabel>\n      <Select value={selectedDesk} label=\"Desk\" onChange={handleChange}>\n        {currentDeskList.map((desk) => (\n          <MenuItem value={desk.desk_id}>{desk.desk_id}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/floor_plan_Ordina_B2.c52b3cd2.jpg\";","import { FC, useContext, useState } from \"react\";\nimport { Typography, Alert, Card, Grid, Modal } from \"@mui/material\";\nimport { AvailableDeskList } from \"../AvailableDeskList\";\nimport { isDeskSelected } from \"../../utils\";\nimport { FormContext } from \"../../FormContext\";\nimport img from \"../../images/floor_plan_Ordina_B2.jpg\";\n\nexport const DeskStep: FC = () => {\n  const [imgOpen, setImgOpen] = useState(false);\n  const {\n    desk: [selectedDesk],\n  } = useContext(FormContext);\n\n  return (\n      <div>\n      <Grid container>\n        <Grid item xs={12} md={4}>\n        <Typography className=\"subText\">\n        Please select one of the available desks:\n      </Typography>\n          <AvailableDeskList />\n          {isDeskSelected(selectedDesk) ? (\n            <Alert severity=\"warning\">There is no desk selected</Alert>\n          ) : (\n            \"\"\n          )}\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Card>\n            <img \n              className= \"image\"\n              onClick={() => setImgOpen(true)}\n              src={img}\n              alt=\"Layout\"\n            />\n          </Card>\n          <Typography variant=\"subtitle2\">Click image to enlarge</Typography>\n        \n        </Grid>\n      </Grid>\n       <Modal\n       open={imgOpen}\n       onClose={() => setImgOpen(false)}>\n         <img className=\"modal-content\" alt=\"zoomedLayout\" src={img} />\n       </Modal>\n       </div>\n  );\n};\n","import {\n  Stepper,\n  Step,\n  StepButton,\n  Typography,\n  Button,\n  Grid,\n} from \"@mui/material\";\nimport { FC, useContext } from \"react\";\nimport { TimeStep } from \"../components/steps/TimeStep\";\nimport { DateStep } from \"../components/steps/DateStep\";\nimport { DeskStep } from \"../components/steps/DeskStep\";\nimport { FormContext } from \"../FormContext\";\nimport { isDeskSelected, isEndTimeAfterStart } from \"../utils\";\n\nexport const BookingStepper: FC = () => {\n  const stepComponents = [<DateStep />, <TimeStep />, <DeskStep />];\n  const steps: string[] = [\n    \"Select booking date\",\n    \"Select booking time\",\n    \"Select desk\",\n  ];\n  const {\n    activeStep: [activeStep, setActiveStep],\n    date: [dateValue],\n    startTime: [startTimeValue],\n    endTime: [endTimeValue],\n    desk: [selectedDesk],\n  } = useContext(FormContext);\n\n  const handleStep = (step: number) => {\n    setActiveStep(step);\n  };\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  const handleNext = () => {\n    const isLastStep = activeStep === steps.length - 1;\n    const newActiveStep = isLastStep ? 0 : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const hasStepError = (index: number) => {\n    return (\n      (index === 1 &&\n        isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue)) ||\n      (index === 2 && isDeskSelected(selectedDesk))\n    );\n  };\n\n  return (\n    <Grid container width=\"90%\" justifyContent=\"space-between\" rowSpacing=\"2%\">\n      <Grid item xs={12} md={12}>\n        <Button disabled={activeStep === 0} onClick={handleBack}>\n          Back\n        </Button>\n        <Button onClick={handleNext}>Next</Button>\n      </Grid>\n      <Grid item xs={6} md={12}>\n        <Stepper nonLinear activeStep={activeStep}>\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepButton onClick={() => handleStep(index)}>\n                <Typography className=\"headerText\">{label}</Typography>\n                {hasStepError(index) ? (\n                  <Typography variant=\"caption\" color=\"error\">\n                    Missing/ wrong information\n                  </Typography>\n                ) : null}\n              </StepButton>\n            </Step>\n          ))}\n        </Stepper>\n      </Grid>\n      <Grid item xs={10} md={12}>\n        {stepComponents[activeStep]}\n      </Grid>\n    </Grid>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { Snackbar, IconButton, Fab, Paper } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { BookingStepper } from \"../components/BookingStepper\";\nimport { getUnixTime, isFutureTime, isDeskSelected, isEndTimeAfterStart } from \"../utils\";\nimport { FormContext } from \"../FormContext\";\n/* TODO issue 58 better MUI styling */\nimport \"../styles.css\";\n\nconst UNIX_DAY = 86400 * 1000;\n\nconst BookingPage: FC = () => {\n  const prevBookingDesk = \"\";\n  const handleBooking = async () => {\n    const data = await fetch(`${process.env.REACT_APP_ROOT_URL}api/book`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        booking_id: `booking ${selectedDesk}.${Date.now()}`,\n        start_time: getUnixTime(dateValue, startTimeValue),\n        end_time: getUnixTime(dateValue, endTimeValue),\n        booked_desk: selectedDesk,\n      }),\n    });\n    const json = await data.json();\n    if (json.booking) {\n      setBookingSucces(true);\n      setPrevSelectedDesk(selectedDesk);\n      setSelectedDesk(\"\");\n    }\n  };\n  const checkFields = () => {\n    return (\n      isDeskSelected(selectedDesk) ||\n      isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue) ||\n      isFutureTime(dateValue, startTimeValue)\n    );\n  };\n\n  const initialStartTime = new Date();\n  initialStartTime.setHours(9, 0, 0, 0);\n  const initialEndTime = new Date();\n  initialEndTime.setHours(17, 0, 0, 0);\n  const [prevSelectedDesk, setPrevSelectedDesk] = useState(\"\")\n  const [activeStep, setActiveStep] = useState(0);\n  const [bookingSucces, setBookingSucces] = useState(false);\n  const [startTimeValue, setStartTimeValue] = useState<Date>(initialStartTime);\n  const [endTimeValue, setEndTimeValue] = useState<Date>(initialEndTime);\n  const [dateValue, setDateValue] = useState<Date>(\n    new Date(Date.now() + UNIX_DAY)\n  );\n  const [selectedDesk, setSelectedDesk] = useState(\"\");\n  const store = {\n    startTime: [startTimeValue, setStartTimeValue],\n    endTime: [endTimeValue, setEndTimeValue],\n    date: [dateValue, setDateValue],\n    desk: [selectedDesk, setSelectedDesk],\n    activeStep: [activeStep, setActiveStep],\n    bookingSucces: [bookingSucces, setBookingSucces],\n  };\n\n  return (\n    <FormContext.Provider value={store}>\n      <div style={{ textAlign: \"center\", padding: \"1%\" }}>\n        <Paper\n          elevation={6}\n          style={{\n            width: \"80%\",\n            minWidth: \"50%\",\n            height: \"100%\",\n            margin: \"auto\",\n            padding: \"2%\",\n          }}\n        >\n          <BookingStepper />\n          <Fab\n          color=\"secondary\"\n          disabled={checkFields()}\n          onClick={handleBooking}\n          style={{\n            bottom: 20,\n            right: 20,\n            position: \"fixed\",\n          }}\n        >\n          Book\n        </Fab>\n        </Paper>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          open={bookingSucces}\n          action={\n            <IconButton onClick={() => {\n            setBookingSucces(false);}}>\n              <CloseIcon color={\"primary\"} />\n            </IconButton>\n          }\n          autoHideDuration={6000}\n          onClose={() => {\n            setBookingSucces(false);\n          }}\n          message={`Your booking for desk ${prevSelectedDesk} was succesful`}\n        />\n      </div>\n    </FormContext.Provider>\n  );\n};\nexport default BookingPage;\n","import { ListItem } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { DeskType } from \"../types\";\n\ntype Props = {\n  desk: DeskType;\n};\nexport const DeskItemCheckIn: FC<Props> = ({ desk }) => {\n  return <ListItem>{desk.desk_id}</ListItem>;\n};\n","import { List, Stack } from \"@mui/material\";\nimport { useState, FC, useEffect } from \"react\";\nimport { DeskType, Booking } from \"../types\";\nimport { DeskItemCheckIn } from \"./DeskItem\";\nimport { isBetween } from \"../utils\";\n\ntype Props = {\n  deskId: string;\n};\nconst OFFSET_AVAILABLE_DESKS = 2;\nconst UNIX_HALF_HOUR = 1800000;\n\nconst isBookedNow = (booking: Booking) => {\n  return isBetween(\n    Date.now() / 1000,\n    booking.start_time - UNIX_HALF_HOUR,\n    booking.end_time\n  );\n};\n\nexport const CheckinDeskList: FC<Props> = ({ deskId }) => {\n  const [currentDeskList, setCurrentDeskList] = useState<DeskType[]>([]);\n\n  useEffect(() => {\n    const setDeskList = async () => {\n      const desks = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n      );\n      const desksJson = await desks.json();\n      const allDesks: DeskType[] = desksJson.deskList;\n\n      const bookingList = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/bookinglist`\n      );\n      const jsonBookingList = await bookingList.json();\n      const bookings: Booking[] = jsonBookingList.bookingList;\n\n      const deskIndex = allDesks.findIndex((desk) => desk.desk_id === deskId);\n      const getDeskForBooking = (booking: Booking) =>\n        allDesks.find((desk) => desk.desk_id === booking.booked_desk);\n      const currentBookedDesks = bookings\n        .filter(isBookedNow)\n        .map(getDeskForBooking);\n\n      if (\n        currentBookedDesks.find((bookedDesk) => bookedDesk?.desk_id === deskId)\n      ) {\n        const nearbyDesks = allDesks.filter((otherDesk, otherdDeskIndex) => {\n          const isCurrentlyBooked = currentBookedDesks.find(\n            (bookedDesk) => bookedDesk?.desk_id === otherDesk.desk_id\n          );\n          const isSameDesk = deskIndex === otherdDeskIndex;\n          const distance = deskIndex - otherdDeskIndex;\n          const isInRange =\n            distance >= -OFFSET_AVAILABLE_DESKS &&\n            distance <= OFFSET_AVAILABLE_DESKS;\n          return !isSameDesk && isInRange && !isCurrentlyBooked;\n        });\n        setCurrentDeskList(nearbyDesks);\n      }\n    };\n    setDeskList();\n  }, [deskId]);\n\n  return (\n    <Stack>\n      {currentDeskList.length <= 0\n        ? \"\"\n        : \"This desk is not available, but these are:\"}\n      <List style={{ maxHeight: 200, overflow: \"auto\" }}>\n        {currentDeskList.map((desk) => (\n          <DeskItemCheckIn key={desk.desk_id} desk={desk}></DeskItemCheckIn>\n        ))}\n      </List>\n    </Stack>\n  );\n};\n","import { Stack, Button, Snackbar, Typography, IconButton } from \"@mui/material\";\nimport { useState, FC, useEffect } from \"react\";\nimport { CheckinDeskList } from \"../components/CheckinDeskList\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"../styles.css\"\n\nconst CheckinPage: FC = () => {\n  const deskId = document.location.search.substr(1);\n  const [currentDeskState, setCurrentDeskState] = useState(\"free\");\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    const setInitialDeskState = async () => {\n      const data = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`\n      );\n      const json = await data.json();\n      setCurrentDeskState(json.deskState);\n    };\n    setInitialDeskState();\n  }, [deskId]);\n\n  const handleToggleChecked = async () => {\n    const data = await fetch(\n      `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n        body: JSON.stringify({\n          deskState: currentDeskState,\n          deskId: deskId,\n        }),\n      }\n    );\n    const json = await data.json();\n    setCurrentDeskState(json.deskState);\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <Stack spacing={2}>\n        {/* TODO issue 58 better MUI styling */}\n        <Typography className=\"headerText\">{deskId}</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={currentDeskState === \"unavailable\"}\n          onClick={handleToggleChecked}\n        >\n          {currentDeskState === \"free\" ? \"Check in\" : \"Check out\"}\n        </Button>\n        <CheckinDeskList deskId={deskId} />\n      </Stack>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={() => {\n          setOpen(false);\n        }}\n        action={\n          <IconButton onClick={() => setOpen(false)}>\n            <CloseIcon color={\"primary\"} />\n          </IconButton>\n        }\n        message={currentDeskState === \"free\" ? \"checked out\" : \"checked in\"}\n      />\n    </div>\n  );\n};\n\nexport default CheckinPage;\n","import { Toolbar, IconButton, AppBar, Typography } from \"@mui/material\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport React, { FC } from \"react\";\nimport \"../styles.css\";\n\nexport const TopBar: FC = () => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Typography\n          className=\"headerText\"\n          color=\"inherit\"\n          component=\"div\"\n          sx={{ flexGrow: 1 }}\n        >\n          Ordina\n        </Typography>\n        <IconButton size=\"large\" color=\"inherit\">\n          <AccountBoxIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { Toolbar, Drawer, Divider, List, ListItem, ListItemText, ListItemButton, Card, CardContent, Typography, CardHeader, Box, CardActions, Button, LinearProgress, Alert, InputAdornment, TextField } from \"@mui/material\";\nimport { FC, useEffect, useState } from \"react\";\nimport \"../styles.css\"\n\nconst DRAWER_WIDTH = 240;\nconst BOOKING_ROUTE_URL = \"/desks/book\";\nconst BOOKING_LABEL = \"Make a new booking\";\nconst CHECKIN_ROUTE_URL = \"/desks/checkin/?b2.\";\nconst CHECKIN_LABEL = \"Check in at desk b2.\";\n\nconst HomePage: FC = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasError, setHasError] = useState(false);\n    const [deskNr, setDeskNr] = useState<number>(1);\n\n    const getDesks = async () => {\n        setIsLoading(true);\n        try {\n            const data = await fetch(\n                `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n            );\n            const { deskList } = await data.json() as { deskList: object[] };\n            if (!Array.isArray(deskList)) {\n                throw new Error(\"No desks in response\");\n            }\n        } catch (error) {\n            console.error(error);\n            setHasError(true);\n        }\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        getDesks();\n    }, []);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newDeskNr = parseInt(event.target.value, 10);\n        if(!isNaN(newDeskNr)) {\n            setDeskNr(newDeskNr);\n        } else {\n            console.error(\"Error: not a number, might be an intermediate value\");\n        }\n    }\n\n    return <Box sx={{ display: \"flex\" }}>\n        <Drawer variant=\"permanent\" anchor=\"left\" sx={{\n            display: { xs: \"none\", md: \"block\"},\n            width: DRAWER_WIDTH,\n            flexShrink: 0,\n            '& .MuiDrawer-paper': {\n                width: DRAWER_WIDTH,\n                boxSizing: 'border-box',\n            },\n        }}>\n            <Toolbar />\n            <Divider />\n            {!hasError && <List>\n                <ListItem>\n                    <ListItemButton component=\"a\" href={BOOKING_ROUTE_URL}>\n                        <ListItemText primary={BOOKING_LABEL} />\n                    </ListItemButton>\n                </ListItem>\n                <ListItem>\n                    <ListItemButton component=\"a\" href={`${CHECKIN_ROUTE_URL}${deskNr}`}>\n                        <ListItemText primary={`${CHECKIN_LABEL}${deskNr}`} />\n                    </ListItemButton>\n                </ListItem>\n            </List>}\n        </Drawer>\n        <Box component=\"main\"\n            sx={{ flexGrow: 1, p: { xs: 1, md: 3}, pt: { xs: 3, md: 3} }}>\n            {isLoading && <LinearProgress />}\n            <Card>\n                <CardHeader title=\"Smart desk booking\" subheader=\"Ordina\" />\n                <CardContent>\n                    {hasError && <Alert severity=\"error\">Error: API not available or failing!</Alert>}\n                    <Typography variant=\"h6\" gutterBottom>Booking a desk</Typography>\n                    <Typography gutterBottom>Here you can book a desk for you and your team. Keep in mind ...</Typography>\n                    <Typography variant=\"h6\" gutterBottom>Checking in</Typography>\n                    <Typography>To check in you can scan the QR code on the desk or type in the desk number below. Keep in mind ...</Typography>\n                    <TextField\n                        label=\"Desk number\"\n                        id=\"outlined-start-adornment\"\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">B2.</InputAdornment>,\n                        }}\n                        value={deskNr}\n                        onChange={handleChange}\n                        type=\"number\"\n                    />\n                </CardContent>\n                {!hasError && <CardActions>\n                    <Button component=\"a\" href={BOOKING_ROUTE_URL}>{BOOKING_LABEL}</Button>\n                    <Button component=\"a\" href={`${CHECKIN_ROUTE_URL}${deskNr}`} color=\"secondary\">{`${CHECKIN_LABEL}${deskNr}`}</Button>\n                </CardActions>}\n            </Card>\n        </Box>\n    </Box>\n}\n\nexport default HomePage;\n","import {createTheme } from '@mui/material/styles';\nimport { orange, deepOrange } from '@mui/material/colors';\n\nexport const theme = createTheme({\n    palette: {\n      primary: {\n        main: orange[500],\n      },\n      secondary: {\n        main: deepOrange[500],\n      },\n    },\n  });","import { ThemeProvider } from '@mui/material/styles';\nimport BookingPage from './pages/BookingPage';\nimport CheckinPage from './pages/CheckinPage';\nimport { TopBar } from './components/TopBar';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport { CssBaseline } from '@mui/material';\nimport { theme } from './theme'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <CssBaseline />\n          <TopBar />\n          <Switch>\n            <Route path=\"/desks/book\" component={BookingPage} />\n            <Route path=\"/desks/checkin\" component={CheckinPage} />\n            <Route component={HomePage} />\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}