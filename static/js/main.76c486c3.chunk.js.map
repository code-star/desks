{"version":3,"sources":["FormContext.ts","components/TimeSetter.tsx","utils.ts","components/steps/TimeStep.tsx","components/DateSetter.tsx","components/steps/DateStep.tsx","components/AvailableDeskList.tsx","images/floor_plan_Ordina_B2.jpg","components/steps/DeskStep.tsx","components/BookingStepper.tsx","pages/BookingPage.tsx","components/DeskItem.tsx","components/CheckinDeskList.tsx","pages/CheckinPage.tsx","images/ordina_logo.png","components/TopBar.tsx","pages/HomePage.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FormContext","React","createContext","TimeSetter","title","type","useContext","startTime","startTimeValue","setStartTimeValue","endTime","endTimeValue","setEndTimeValue","Box","Typography","variant","gutterBottom","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","value","onChange","newValue","renderInput","params","TextField","isBetween","min","max","getUnixTime","date","time","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getTime","isFutureTime","dateValue","now","isDeskSelected","selectedDesk","isEndTimeAfterStart","endtimeValue","unixStartTime","TimeStep","Stack","spacing","Alert","severity","Divider","isPastDate","DateSetter","setDateValue","StaticDatePicker","orientation","displayStaticWrapperAs","openTo","shouldDisableDate","DateStep","AvailableDeskList","useState","currentDeskList","setCurrentDeskList","desk","setSelectedDesk","bookingSucces","useEffect","setDeskList","a","fetch","process","bookingList","json","jsonBookingList","bookings","bookingsAtTime","filter","booking","unixEndTime","isBetweenStart","start_time","isBetweenEnd","end_time","data","availableDesks","deskList","find","booked_desk","desk_id","FormControl","sx","m","minWidth","InputLabel","Select","label","event","target","map","MenuItem","DeskStep","imgOpen","setImgOpen","Grid","container","item","xs","md","className","onClick","src","img","alt","Modal","open","onClose","BookingStepper","stepComponents","steps","activeStep","setActiveStep","setBookingSucces","setPrevSelectedDesk","prevSelectedDesk","handleBooking","method","headers","body","JSON","stringify","booking_id","isBookingPossible","isLastStep","length","handleNext","hasStepError","index","Card","elevation","width","CardContent","minHeight","Stepper","nonLinear","Step","StepButton","color","CardActions","justifyContent","Button","disabled","BookingPage","initialStartTime","setHours","initialEndTime","store","Provider","p","pt","Snackbar","anchorOrigin","vertical","horizontal","action","IconButton","autoHideDuration","message","DeskItemCheckIn","ListItem","isBookedNow","CheckinDeskList","deskId","desks","desksJson","allDesks","deskIndex","findIndex","getDeskForBooking","currentBookedDesks","bookedDesk","nearbyDesks","otherDesk","otherdDeskIndex","isCurrentlyBooked","distance","List","style","maxHeight","overflow","CheckinPage","document","location","search","substr","currentDeskState","setCurrentDeskState","setOpen","setInitialDeskState","deskState","handleToggleChecked","CardHeader","TopBar","AppBar","position","Toolbar","gap","height","component","flexGrow","fontSize","size","HomePage","isLoading","setIsLoading","hasError","setHasError","deskNr","setDeskNr","getDesks","Array","isArray","Error","console","error","LinearProgress","subheader","id","InputProps","startAdornment","InputAdornment","newDeskNr","parseInt","isNaN","href","theme","createTheme","palette","primary","main","light","dark","secondary","App","ThemeProvider","CssBaseline","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.76c486c3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const FormContext = React.createContext<any>(null);","import { FC, useContext } from \"react\";\nimport { Typography, Box, TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, TimePicker } from \"@mui/lab\";\nimport { FormContext } from \"../FormContext\";\n\ntype Props = {\n  title: string;\n  type: \"Start\" | \"End\";\n};\n\nexport const TimeSetter: FC<Props> = ({ title, type }) => {\n  const {\n    startTime: [startTimeValue, setStartTimeValue],\n  } = useContext(FormContext);\n  const {\n    endTime: [endTimeValue, setEndTimeValue],\n  } = useContext(FormContext);\n  return (\n    <Box>\n      <Typography variant=\"body1\" gutterBottom>{title}</Typography>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          value={type === \"Start\" ? startTimeValue : endTimeValue}\n          onChange={(newValue) => {\n            if (!newValue) {\n              return;\n            }\n            if (type === \"Start\") {\n              setStartTimeValue(newValue);\n            }\n            if (type === \"End\") {\n              setEndTimeValue(newValue);\n            }\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  );\n};\n","export function isBetween(value: number, min: number, max: number) {\n  return value >= min && value <= max;\n}\n\nexport function getUnixTime(date: Date, time: Date) {\n  return (\n    new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      time.getHours(),\n      time.getMinutes()\n    ).getTime() / 1000\n  );\n}\n\nexport const isFutureTime = (dateValue:Date, startTimeValue:Date) =>{\n  const unixStartTime = getUnixTime(dateValue, startTimeValue);\n  return unixStartTime - (Date.now() / 1000) <= 0;\n}\nexport const isDeskSelected =(selectedDesk:string) =>{\n  return selectedDesk === \"\"\n}\nexport const isEndTimeAfterStart = (dateValue:Date, startTimeValue:Date, endtimeValue:Date) =>{\n  const unixStartTime = getUnixTime(dateValue, startTimeValue);\n  const unixEndTime = getUnixTime(dateValue, endtimeValue);\n  return unixEndTime - unixStartTime <= 0;\n}\n","import { FC, useContext } from \"react\";\nimport { Stack, Alert, Divider} from \"@mui/material\";\nimport { TimeSetter } from \"../TimeSetter\";\nimport { isFutureTime, isEndTimeAfterStart } from \"../../utils\";\nimport { FormContext } from \"../../FormContext\";\n\nexport const TimeStep: FC = () => {\n  const {\n    date: [dateValue],\n    startTime: [startTimeValue],\n    endTime: [endTimeValue],\n  } = useContext(FormContext);\n\n  return (\n    <Stack spacing={2}>\n      <TimeSetter\n        title={\"Please select the start time for the booking\"}\n        type={\"Start\"}\n      />\n      {isFutureTime(dateValue, startTimeValue) ? (\n        <Alert severity=\"warning\">Check if the time has passed</Alert>\n      ) : null}\n      <Divider/>\n      <TimeSetter\n        title={\"Please select the end time for the booking\"}\n        type={\"End\"}\n      />\n      {isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue) ? (\n        <Alert severity=\"warning\">\n          The end time is earlier than the start time\n        </Alert>\n      ) : null}\n    </Stack>\n  );\n};\n","import { useContext, FC } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, StaticDatePicker } from \"@mui/lab\";\nimport { FormContext } from \"../FormContext\";\nimport { getUnixTime } from \"../utils\";\n\nconst UNIX_DAY = 86400;\n\nconst isPastDate = (date: Date) => {\n  return getUnixTime(date, date) < (Date.now() / 1000 - UNIX_DAY);\n};\n\nexport const DateSetter: FC = () => {\n  const {\n    date: [dateValue, setDateValue],\n  } = useContext(FormContext);\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <StaticDatePicker<Date>\n        orientation=\"portrait\"\n        displayStaticWrapperAs=\"desktop\"\n        openTo=\"day\"\n        value={dateValue}\n        shouldDisableDate={isPastDate}\n        onChange={(newValue) => {\n          if (newValue) {\n            setDateValue(newValue);\n          }\n        }}\n        renderInput={(params) => <TextField {...params} />}\n      />\n    </LocalizationProvider>\n  );\n};\n","import { FC} from \"react\";\nimport { Box, Typography} from \"@mui/material\";\nimport { DateSetter } from \"../DateSetter\";\n\nexport const DateStep: FC = () => {\n  return (\n    <Box>\n      <Typography variant=\"body1\" gutterBottom>\n        Please select the date for the booking\n      </Typography>\n      <DateSetter />\n    </Box>\n  );\n};\n","import { FormControl,InputLabel,MenuItem,Select,SelectChangeEvent } from \"@mui/material\";\nimport { useState, FC, useEffect, useContext } from \"react\";\nimport { DeskType, Booking } from \"../types\";\nimport { isBetween, getUnixTime } from \"../utils\";\nimport { FormContext } from \"../FormContext\";\n\nexport const AvailableDeskList: FC = () => {\n  const [currentDeskList, setCurrentDeskList] = useState<DeskType[]>([]);\n  const {\n    desk: [selectedDesk, setSelectedDesk],\n  } = useContext(FormContext);\n  const {\n    startTime: [startTimeValue],\n  } = useContext(FormContext);\n  const {\n    endTime: [endTimeValue],\n  } = useContext(FormContext);\n  const {\n    date: [dateValue],\n  } = useContext(FormContext);\n  const{\n    bookingSucces: [bookingSucces]\n  } = useContext(FormContext);\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setSelectedDesk(event.target.value);\n  };\n\n  useEffect(() => {\n    const setDeskList = async () => {\n      const bookingList = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/bookinglist`\n      );\n      const jsonBookingList = await bookingList.json();\n      const bookings: Booking[] = jsonBookingList.bookingList;\n\n      const bookingsAtTime = bookings.filter((booking: Booking) => {\n        const unixStartTime = getUnixTime(dateValue, startTimeValue);\n        const unixEndTime = getUnixTime(dateValue, endTimeValue);\n        const isBetweenStart = isBetween(\n          booking.start_time,\n          unixStartTime,\n          unixEndTime\n        );\n        const isBetweenEnd = isBetween(\n          booking.end_time,\n          unixStartTime,\n          unixEndTime\n        );\n        return isBetweenStart || isBetweenEnd;\n      });\n\n      const data = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n      );\n      const json = await data.json();\n\n      const availableDesks = json.deskList.filter((desk: DeskType) => {\n        const isBooked = bookingsAtTime.find(\n          (booking: Booking) => booking.booked_desk === desk.desk_id\n        );\n        return !isBooked;\n      });\n      setCurrentDeskList(availableDesks);\n    };\n    setDeskList();\n  }, [bookingSucces, endTimeValue, startTimeValue, dateValue]);\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>Desk</InputLabel>\n      <Select value={selectedDesk} label=\"Desk\" onChange={handleChange}>\n        {currentDeskList.map((desk) => (\n          <MenuItem value={desk.desk_id}>{desk.desk_id}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/floor_plan_Ordina_B2.c52b3cd2.jpg\";","import { FC, useContext, useState } from \"react\";\nimport { Typography, Alert, Grid, Modal } from \"@mui/material\";\nimport { AvailableDeskList } from \"../AvailableDeskList\";\nimport { isDeskSelected } from \"../../utils\";\nimport { FormContext } from \"../../FormContext\";\nimport img from \"../../images/floor_plan_Ordina_B2.jpg\";\nimport \"./DeskStep.css\";\n\nexport const DeskStep: FC = () => {\n  const [imgOpen, setImgOpen] = useState(false);\n  const {\n    desk: [selectedDesk],\n  } = useContext(FormContext);\n\n  return (\n    <div>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={4}>\n          <Typography variant=\"body1\" gutterBottom>\n            Please select one of the available desks:\n          </Typography>\n          <AvailableDeskList />\n          {isDeskSelected(selectedDesk) ? (\n            <Alert severity=\"warning\">There is no desk selected</Alert>\n          ) : (\n            \"\"\n          )}\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <img\n            className=\"deskstep-image\"\n            onClick={() => setImgOpen(true)}\n            src={img}\n            alt=\"Layout\"\n          />\n          <Typography variant=\"caption\">Click image to enlarge</Typography>\n        </Grid>\n      </Grid>\n      <Modal open={imgOpen} onClose={() => setImgOpen(false)}>\n        <img className=\"deskstep-modal-content\" alt=\"zoomedLayout\" src={img} />\n      </Modal>\n    </div>\n  );\n};\n","import {\n  Stepper,\n  Step,\n  StepButton,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport { FC, useContext } from \"react\";\nimport { TimeStep } from \"../components/steps/TimeStep\";\nimport { DateStep } from \"../components/steps/DateStep\";\nimport { DeskStep } from \"../components/steps/DeskStep\";\nimport { FormContext } from \"../FormContext\";\nimport { isDeskSelected, isEndTimeAfterStart, isFutureTime, getUnixTime } from \"../utils\";\n\nexport const BookingStepper: FC = () => {\n  const stepComponents = [<DateStep />, <TimeStep />, <DeskStep />];\n  const steps: string[] = [\n    \"Select booking date\",\n    \"Select booking time\",\n    \"Select desk\",\n  ];\n  const {\n    activeStep: [activeStep, setActiveStep],\n    date: [dateValue],\n    startTime: [startTimeValue],\n    endTime: [endTimeValue],\n    desk: [selectedDesk, setSelectedDesk],\n    bookingSucces: [, setBookingSucces],\n    prevSelectedDesk: [, setPrevSelectedDesk]\n  } = useContext(FormContext);\n\n  const handleBooking = async () => {\n    const data = await fetch(`${process.env.REACT_APP_ROOT_URL}api/book`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        booking_id: `booking ${selectedDesk}.${Date.now()}`,\n        start_time: getUnixTime(dateValue, startTimeValue),\n        end_time: getUnixTime(dateValue, endTimeValue),\n        booked_desk: selectedDesk,\n      }),\n    });\n    const json = await data.json();\n    if (json.booking) {\n      setBookingSucces(true);\n      setPrevSelectedDesk(selectedDesk);\n      setSelectedDesk(\"\");\n    }\n  };\n  \n  const isBookingPossible = () => {\n    return (\n      isLastStep &&(\n      isDeskSelected(selectedDesk) ||\n      isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue) ||\n      isFutureTime(dateValue, startTimeValue)\n      )\n    );\n  };\n\n  const isLastStep = activeStep === steps.length - 1;\n  const handleStep = (step: number) => {\n    setActiveStep(step);\n  };\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  const handleNext = () => {\n    isLastStep?\n    handleBooking()\n    :\n    setActiveStep(activeStep + 1);\n  };\n\n  const hasStepError = (index: number) => {\n    return (\n      (index === 1 && isFutureTime(dateValue, startTimeValue)) ||\n      (index === 1 &&\n        isEndTimeAfterStart(dateValue, startTimeValue, endTimeValue)) ||\n      (index === 2 && isDeskSelected(selectedDesk))\n    );\n  };\n\n  return (\n    <Card\n      elevation={6}\n      className=\"basecard\"\n      sx={{ width: { xs: \"100%\", md: \"900px\" } }}\n    >\n      <CardContent\n        sx={{ minHeight: { xs: \"calc(100vh - 120px)\", md: \"580px\" } }}\n      >\n        <Grid container spacing={5}>\n          <Grid item xs={6} md={12}>\n            <Stepper nonLinear activeStep={activeStep}>\n              {steps.map((label, index) => (\n                <Step key={label}>\n                  <StepButton onClick={() => handleStep(index)}>\n                    <Typography variant=\"body1\">{label}</Typography>\n                    {hasStepError(index) ? (\n                      <Typography variant=\"caption\" color=\"error\">\n                        Missing/ wrong information\n                      </Typography>\n                    ) : null}\n                  </StepButton>\n                </Step>\n              ))}\n            </Stepper>\n          </Grid>\n          <Grid item xs={12}>\n            {stepComponents[activeStep]}\n          </Grid>\n          <Grid item xs={12}></Grid>\n        </Grid>\n      </CardContent>\n      <CardActions sx={{justifyContent: \"flex-end\"}}>\n        <Button disabled={activeStep === 0} onClick={handleBack}>\n          Back\n        </Button>\n        {isLastStep?<Button variant=\"contained\" onClick={handleNext} disabled={isBookingPossible()} color=\"secondary\">\n          Book\n        </Button>:<Button variant=\"contained\" onClick={handleNext} disabled={isBookingPossible()}>\n          Next\n        </Button>}\n      </CardActions>\n    </Card>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { Snackbar, IconButton, Box } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { BookingStepper } from \"../components/BookingStepper\";\nimport { FormContext } from \"../FormContext\";\n\nconst UNIX_DAY = 86400 * 1000;\n\nconst BookingPage: FC = () => {\n  const initialStartTime = new Date();\n  initialStartTime.setHours(9, 0, 0, 0);\n  const initialEndTime = new Date();\n  initialEndTime.setHours(17, 0, 0, 0);\n  const [prevSelectedDesk, setPrevSelectedDesk] = useState(\"\");\n  const [activeStep, setActiveStep] = useState(0);\n  const [bookingSucces, setBookingSucces] = useState(false);\n  const [startTimeValue, setStartTimeValue] = useState<Date>(initialStartTime);\n  const [endTimeValue, setEndTimeValue] = useState<Date>(initialEndTime);\n  const [dateValue, setDateValue] = useState<Date>(\n    new Date(Date.now() + UNIX_DAY)\n  );\n  const [selectedDesk, setSelectedDesk] = useState(\"\");\n  const store = {\n    startTime: [startTimeValue, setStartTimeValue],\n    endTime: [endTimeValue, setEndTimeValue],\n    date: [dateValue, setDateValue],\n    desk: [selectedDesk, setSelectedDesk],\n    activeStep: [activeStep, setActiveStep],\n    bookingSucces: [bookingSucces, setBookingSucces],\n    prevSelectedDesk: [prevSelectedDesk, setPrevSelectedDesk],\n  };\n\n  return (\n    <FormContext.Provider value={store}>\n      <Box sx={{ p: { xs: 1, md: 3 }, pt: { xs: 3, md: 3 } }}>\n        <BookingStepper />\n        <Snackbar\n           anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={bookingSucces}\n          action={\n            <IconButton\n              onClick={() => {\n                setBookingSucces(false);\n              }}\n            >\n              <CloseIcon color={\"primary\"} />\n            </IconButton>\n          }\n          autoHideDuration={6000}\n          onClose={() => {\n            setBookingSucces(false);\n          }}\n          message={`Your booking for desk ${prevSelectedDesk} was succesful`}\n        />\n      </Box>\n    </FormContext.Provider>\n  );\n};\nexport default BookingPage;\n","import { ListItem } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { DeskType } from \"../types\";\n\ntype Props = {\n  desk: DeskType;\n};\nexport const DeskItemCheckIn: FC<Props> = ({ desk }) => {\n  return <ListItem>{desk.desk_id}</ListItem>;\n};\n","import { List, Stack } from \"@mui/material\";\nimport { useState, FC, useEffect } from \"react\";\nimport { DeskType, Booking } from \"../types\";\nimport { DeskItemCheckIn } from \"./DeskItem\";\nimport { isBetween } from \"../utils\";\n\n\ntype Props = {\n  deskId: string;\n};\nconst OFFSET_AVAILABLE_DESKS = 2;\nconst UNIX_HALF_HOUR = 1800000;\n\nconst isBookedNow = (booking: Booking) => {\n  return isBetween(\n    Date.now() / 1000,\n    booking.start_time - UNIX_HALF_HOUR,\n    booking.end_time\n  );\n};\n\nexport const CheckinDeskList: FC<Props> = ({ deskId }) => {\n  const [currentDeskList, setCurrentDeskList] = useState<DeskType[]>([]);\n\n  useEffect(() => {\n    const setDeskList = async () => {\n      const desks = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n      );\n      const desksJson = await desks.json();\n      const allDesks: DeskType[] = desksJson.deskList;\n\n      const bookingList = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/bookinglist`\n      );\n      const jsonBookingList = await bookingList.json();\n      const bookings: Booking[] = jsonBookingList.bookingList;\n\n      const deskIndex = allDesks.findIndex((desk) => desk.desk_id === deskId);\n      const getDeskForBooking = (booking: Booking) =>\n        allDesks.find((desk) => desk.desk_id === booking.booked_desk);\n      const currentBookedDesks = bookings\n        .filter(isBookedNow)\n        .map(getDeskForBooking);\n\n      if (\n        currentBookedDesks.find((bookedDesk) => bookedDesk?.desk_id === deskId)\n      ) {\n        const nearbyDesks = allDesks.filter((otherDesk, otherdDeskIndex) => {\n          const isCurrentlyBooked = currentBookedDesks.find(\n            (bookedDesk) => bookedDesk?.desk_id === otherDesk.desk_id\n          );\n          const isSameDesk = deskIndex === otherdDeskIndex;\n          const distance = deskIndex - otherdDeskIndex;\n          const isInRange =\n            distance >= -OFFSET_AVAILABLE_DESKS &&\n            distance <= OFFSET_AVAILABLE_DESKS;\n          return !isSameDesk && isInRange && !isCurrentlyBooked;\n        });\n        setCurrentDeskList(nearbyDesks);\n      }\n    };\n    setDeskList();\n  }, [deskId]);\n\n  return (\n    <Stack>\n      {currentDeskList.length <= 0\n        ? \"\"\n        : \"This desk is not available, but these are:\"}\n      <List style={{ maxHeight: 200, overflow: \"auto\" }}>\n        {currentDeskList.map((desk) => (\n          <DeskItemCheckIn key={desk.desk_id} desk={desk}></DeskItemCheckIn>\n        ))}\n      </List>\n    </Stack>\n  );\n};\n","import { Button, Snackbar, Box, IconButton, Card, CardHeader, CardContent, Divider, Stack } from \"@mui/material\";\nimport { useState, FC, useEffect } from \"react\";\nimport { CheckinDeskList } from \"../components/CheckinDeskList\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst CheckinPage: FC = () => {\n  const deskId = document.location.search.substr(1);\n  const [currentDeskState, setCurrentDeskState] = useState(\"free\");\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    const setInitialDeskState = async () => {\n      const data = await fetch(\n        `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`\n      );\n      const json = await data.json();\n      setCurrentDeskState(json.deskState);\n    };\n    setInitialDeskState();\n  }, [deskId]);\n\n  const handleToggleChecked = async () => {\n    const data = await fetch(\n      `${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n        body: JSON.stringify({\n          deskState: currentDeskState,\n          deskId: deskId,\n        }),\n      }\n    );\n    const json = await data.json();\n    setCurrentDeskState(json.deskState);\n    setOpen(true);\n  };\n\n  return (\n    <Box sx={{ p: { xs: 1, md: 3 }, pt: { xs: 3, md: 3 } }}>\n      <Card  \n      elevation={6}\n      className=\"basecard\"\n      sx={{ width: { xs: \"100%\", md: \"900px\" } }}>\n        <CardHeader title={`Desk ${deskId}`}/>\n        <CardContent>\n          <Stack spacing={2}>\n        <Button\n          variant=\"contained\"\n          sx={{width:\"200px\"}}\n          color=\"secondary\"\n          disabled={currentDeskState === \"unavailable\"}\n          onClick={handleToggleChecked}\n        >\n          {currentDeskState === \"free\" ? \"Check in\" : \"Check out\"}\n        </Button>\n        <Divider/>\n        <CheckinDeskList deskId={deskId} />\n        </Stack>\n        </CardContent>\n        </Card>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={() => {\n          setOpen(false);\n        }}\n        action={\n          <IconButton onClick={() => setOpen(false)}>\n            <CloseIcon color={\"primary\"} />\n          </IconButton>\n        }\n        message={currentDeskState === \"free\" ? \"checked out\" : \"checked in\"}\n      />\n    </Box>\n  );\n};\n\nexport default CheckinPage;\n","export default __webpack_public_path__ + \"static/media/ordina_logo.7a9a0777.png\";","import { Toolbar, IconButton, AppBar, Typography } from \"@mui/material\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport { FC } from \"react\";\nimport img from \"../images/ordina_logo.png\"\n\nexport const TopBar: FC = () => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\" sx={{ gap:\"10px\"}} >\n        <img src={img} alt=\"logo\" style={{height:\"2.5rem\"}}/>\n        <Typography\n          variant=\"h5\"\n          color=\"inherit\"\n          component=\"div\"\n          sx={{ flexGrow: 1, fontSize:{xs:\"10px\", md: \"inherit\"}}}\n        >\n          Smart office management\n        </Typography>\n        <IconButton size=\"large\" color=\"inherit\">\n          <AccountBoxIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { Card, CardContent, Typography, CardHeader, Box, CardActions, Button, LinearProgress, Alert, InputAdornment, TextField } from \"@mui/material\";\nimport { FC, useEffect, useState } from \"react\";\n\nconst BOOKING_ROUTE_URL = \"/desks/book\";\nconst BOOKING_LABEL = \"Make a new booking\";\nconst CHECKIN_ROUTE_URL = \"/desks/checkin/?b2.\";\nconst CHECKIN_LABEL = \"Check in at desk b2.\";\n\nconst HomePage: FC = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasError, setHasError] = useState(false);\n    const [deskNr, setDeskNr] = useState<number>(1);\n\n    const getDesks = async () => {\n        setIsLoading(true);\n        try {\n            const data = await fetch(\n                `${process.env.REACT_APP_ROOT_URL}api/desk/list`\n            );\n            const { deskList } = await data.json() as { deskList: object[] };\n            if (!Array.isArray(deskList)) {\n                throw new Error(\"No desks in response\");\n            }\n        } catch (error) {\n            console.error(error);\n            setHasError(true);\n        }\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        getDesks();\n    }, []);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newDeskNr = parseInt(event.target.value, 10);\n        if(!isNaN(newDeskNr)) {\n            setDeskNr(newDeskNr);\n        } else {\n            console.error(\"Error: not a number, might be an intermediate value\");\n        }\n    }\n\n    return <Box sx={{ flexGrow: 1, p: { xs: 1, md: 3}, pt: { xs: 3, md: 3} }}>\n            {isLoading && <LinearProgress />}\n            <Card\n            elevation={6}\n            className=\"basecard\"\n            sx={{ width: { xs: \"100%\", md: \"900px\" } }}>\n                <CardHeader title=\"Smart Office Management\" subheader=\"Ordina\" />\n                <CardContent>\n                    {hasError && <Alert severity=\"error\">Error: API not available or failing!</Alert>}\n                    <Typography variant=\"h6\" gutterBottom>Booking a desk</Typography>\n                    <Typography gutterBottom>Here you can book a desk for you and your team. Keep in mind ...</Typography>\n                    <Typography variant=\"h6\" gutterBottom>Checking in</Typography>\n                    <Typography>To check in you can scan the QR code on the desk or type in the desk number below. Keep in mind ...</Typography>\n                    <TextField\n                        label=\"Desk number\"\n                        id=\"outlined-start-adornment\"\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">B2.</InputAdornment>,\n                        }}\n                        value={deskNr}\n                        onChange={handleChange}\n                        type=\"number\"\n                    />\n                </CardContent>\n                {!hasError && <CardActions>\n                    <Button component=\"a\" href={BOOKING_ROUTE_URL}>{BOOKING_LABEL}</Button>\n                    <Button component=\"a\" href={`${CHECKIN_ROUTE_URL}${deskNr}`} color=\"secondary\">{`${CHECKIN_LABEL}${deskNr}`}</Button>\n                </CardActions>}\n            </Card>\n        </Box>\n}\n\nexport default HomePage;\n","import {createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#f58220\",\n        light: \"#e1e1e1\",\n        dark: \"#c46819\"\n      },\n      secondary: {\n        main: \"#007f92\",\n        light: \"#3da4bf\",\n        dark: \"#58595b\"\n      },\n    },\n  });","import { ThemeProvider } from '@mui/material/styles';\nimport BookingPage from './pages/BookingPage';\nimport CheckinPage from './pages/CheckinPage';\nimport { TopBar } from './components/TopBar';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport { CssBaseline } from '@mui/material';\nimport { theme } from './theme';\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <CssBaseline />\n          <TopBar />\n          <Switch>\n            <Route path=\"/desks/book\" component={BookingPage} />\n            <Route path=\"/desks/checkin\" component={CheckinPage} />\n            <Route component={HomePage} />\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}